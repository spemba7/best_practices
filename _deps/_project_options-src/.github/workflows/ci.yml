name: ci
on:
  pull_request:
  push:
    branches:
      - main
      - master

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - ubuntu-20.04
          - macos-11
        compiler:
          - llvm
          - gcc
        cmake:
          - true
        include:
          - os: "windows-2022"
            compiler: "msvc"
            cmake: true
          - os: "windows-2022"
            compiler: "msvc"
            cmake: 3.18.0
            cmake_generator: "Ninja"
        exclude:
          - os: "windows-2022"
            compiler: "gcc"
            cmake: true
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}-${{ matrix.cmake }}
          restore-keys: |
            ${{ runner.os }}-${{ env.BUILD_TYPE }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: ${{ matrix.cmake }}
          ninja: true
          vcpkg: true
          conan: true
          cppcheck: true
          clangtidy: true
          task: true
          doxygen: true

      - name: Test
        run: |
          task test
          task test_release
          task test_install
        env:
          CMAKE_GENERATOR: ${{ matrix.cmake_generator }}

      - name: Lint
        if: ${{ matrix.os == 'ubuntu-20.04' && matrix.compiler == 'gcc' }}
        run: |
          # TODO add to setup-cpp
          python3 -m pip install --user cmakelint cmake-format

          task lint
